Mücahid Doğan
okan pehlivan
bugce
abdullah
ecenur
mücahit özkanca
özgür 
Fatih Aydın
sümeyra
Alhassane Diallo
onur yurduseven
"""<<<<<<<<<<<<<<<<<<<<<<<<<<"""
Github ta kodların üzerinde Watch denen yere tıklayıp izlenen sayısınız Artırabilirsiniz.  Thx_ :::::::::::::::::
""">>>>>>>>>>>>>>>>>>>>>>>>>>"""
https://github.com/COMU/bohca/wiki/GİT-KULLANIM-KLAVUZU   # git kurulu olmayanlar için
https://gorails.com/setup/ubuntu/16.04  # ruby

https://repl.it/languages/ruby #online ruby yorumlayıcı

https://github.com/haydi-rails-yazalim/homeworks/pull/1/files #abdullah
https://github.com/haydi-rails-yazalim/homeworks/blob/one/ecenurozturk/one.rb Ecenur
https://github.com/haydi-rails-yazalim/homeworks/blob/one/mucahiddogan/one.rb Mücahid Dogan
https://github.com/haydi-rails-yazalim/homeworks/blob/one/bugcekorkmaz/one.rb Bugce Korkmaz
https://github.com/haydi-rails-yazalim/homeworks/blob/one/maxmin099/one.rb  	Maxmin099
https://github.com/haydi-rails-yazalim/homeworks/blob/one/sukarababa/one.rb 	Sümeyra


https://github.com/orgs/haydi-rails-yazalim/teams


Diziler

meyve = ["elma", "armut", "ananas"]
puts meyve[0]
puts meyve[-3]

PRY

Odev1
@me = Array.new # @me = []

age = gets.chomp.to_i #integer için kullanılır to_i
name = gets.chomp
school = gets.chomp
@me << age << name << school # @me << age, #@me=age,name,schooll

@sum = (@me[1] + @me[2]).length
p @sum > 7 ? @me << "7'den büyük" : @me.clear << "7'den küçük"


@me << "7'den büyük" if @sum > 7

if @sum > 7
	@me << "7'den büyük"
end

Döngüler

times # metot

sum = 0
3.times { sum += 2 }
puts sum


age = 20
while age < 30
  puts "#{age + 1} yaşında olmak istemiyorum"
  age += 1
end

for c in 1..3
  puts "Sen #{c}. misin?"
end

for c in 1...3
  puts "Sen #{c}. misin?"
end

for c in (0..10).step(5)
   puts "Sen #{c}. misin?"
end

school = ["ktü", "itü", "ytü", "odtü"]
school.each_with_index do |okul, index|
  puts "Benim okulum #{okul} #{index + 1}. sırada"
end

#Metotlar= method isimleri küçük harfle başlar.

def parametresiz
  puts "ben parametre almayan bir metodum"
end

parametresiz



def toplama(a, b)
  # iki parametre alan metot.
end

#Hata çıkınca
#Tahtaya ayzılan kod
def name (name)
  puts "#{name} Merhaba!"
end
name ("your_name")
#tahtaya yazılan 2. kod
#parametre olarak dizi(yada dizi gibi şeyleri) almak için *değişken kullanılır

def meyveler(*fruits)
#Yıldız koyulmazsa alınacak hata:
#`meyveler': wrong number of arguments (given 3, expected 1) (ArgumentError) 
  fruits.each do |meyve|
	puts meyve
  end
end
	meyveler("elma","armut","nar") 

.....
  
def meyveler(a,*fruits)
  fruits.each do |n|
    puts n
	end
		puts a
	end
	meyveler("life","armut","nar") 


def toplama(one, *all)
  sum = 0
  all.map { |n| sum += n }
  sum + one
end

puts toplama(3,543,12,76)

# kopyala beni nolur

#test için:
https://relishapp.com/rspec/docs/gettingstarted









